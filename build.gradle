import groovy.json.JsonSlurper

plugins {
    id 'java'
}

// define custom repositories
repositories {
    mavenCentral()
    ivy {
        url 'https://github.com/'
        patternLayout {
            artifact '/[organization]/[module]/releases/download/[revision]/[ext]'
            artifact '/[organization]/[module]/raw/[revision]/jars/[ext]'
        }
        metadataSources {
            artifact()
        }
    }
}

// add zipped configuration
configurations {
    zipped
}

// install dependencies from zipped releases
tasks.register('installDependencies', Sync) {
    def extractDir = "${buildDir}/libs"

    ext.extractedJars = fileTree(extractDir) {
        include "**/*.jar"
        exclude "stelnet.jar"
        builtBy "installDependencies"
    }

    dependsOn configurations.zipped
    from {
        configurations.zipped.collect { zipTree(it) }
    }
    into extractDir
}

// project level config
java {
    sourceCompatibility = JavaVersion.VERSION_24
    targetCompatibility = JavaVersion.VERSION_24
}

// where to find sources
sourceSets.main.java.srcDirs = ['src/']
sourceSets.test.java.srcDirs = ['tests/']

// build everything and make a jar
build {
    doLast {
        copy {
            from 'assets'
            from jar
            into '.'
        }
    }
}

// compile time dependencies
dependencies {
    // Update the starsector-api version to match your game version
    implementation "jaghaimo:starsector-api:0.96a-RC10@starfarer.api.jar"
    zipped "Lukas22041:LunaLib:1.7.7@LunaLib.zip"
    implementation files({ tasks.installDependencies.extractedJars })

    // Updated game dependencies
    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.20'
    implementation group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: '2.9.3'
    implementation group: 'org.lwjgl.lwjgl', name: 'lwjgl_util', version: '2.9.3'
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation group: 'org.json', name: 'json', version: '20231013'
    implementation group: 'net.java.jinput', name: 'jinput', version: '2.0.7'
    implementation group: 'org.codehaus.janino', name: 'janino', version: '3.1.10'

    // Updated lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.30'

    // Updated test dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.8.0'
}

// custom tasks
tasks.register('release', Zip) {
    dependsOn build
    archiveFileName = "${project.name}-${readModInfoJson().version}.zip"
    destinationDirectory = file(rootDir)
    from 'assets'
    from jar
    into project.name
}

// methods
def readModInfoJson() {
    def jsonFile = file('assets/mod_info.json')
    def slurper = new JsonSlurper()
    return slurper.parse(jsonFile)
}